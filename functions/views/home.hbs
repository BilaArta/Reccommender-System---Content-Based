<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"
        integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js"
        integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous">
    </script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
        integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous">
    </script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"
        integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous">
    </script>
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <!-- <script src="https://code.jquery.com/jquery-3.3.1.js"></script> -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

</head>

<body>
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-3" style="background-color: #f1f2f6;">
                <img src="" alt="User Photo" id="fotoProfile" width="200px" height="200px">
                <h6 id="emailProfile">@Email</h6>
                <h4 id="nameProfile">@Name</h4>
            </div>
            <div class="col-lg-9">
                <h2 class="display-1">Movie</h2>
                <table class="table table-hover" id="tabelMovie">
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Genre</th>
                            <th>Release Date</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="listMovie">
                       
                    </tbody>
                </table>

                <br>
                <h3 class="display-4">Recommended Movie</h3>
                <table class="table table-hover" id="tabelRecommend">
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Genre</th>
                            <th>Release Date</th>
                            <th>Score</th>
                        </tr>
                    </thead>
                    <tbody >
                        {{!-- BODY TABEL RECOMMENDED MOVIE --}}
                        <tr>
                            <td id="title1"></td>
                            <td id="genre1"></td>
                            <td id="releaseDate1"></td>
                            <td id="score1"></td>
                        </tr>
                        <tr>
                            <td id="title2"></td>
                            <td id="genre2"></td>
                            <td id="releaseDate2"></td>
                            <td id="score2"></td>
                        </tr>
                        <tr>
                            <td id="title3"></td>
                            <td id="genre3"></td>
                            <td id="releaseDate3"></td>
                            <td id="score3"></td>
                        </tr>
                        <tr>
                            <td id="title4"></td>
                            <td id="genre4"></td>
                            <td id="releaseDate4"></td>
                            <td id="score4"></td>
                        </tr>
                        <tr>
                            <td id="title5"></td>
                            <td id="genre5"></td>
                            <td id="releaseDate5"></td>
                            <td id="score5"></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    </div>
    </div> {{!-- div container --}}


    <!-- Firebase App (the core Firebase SDK) is always required and must be listed first -->
    <script src="https://www.gstatic.com/firebasejs/7.14.1/firebase-app.js"></script>

    <!-- If you enabled Analytics in your project, add the Firebase SDK for Analytics -->
    <script src="https://www.gstatic.com/firebasejs/7.14.1/firebase-analytics.js"></script>

    <!-- Add Firebase products that you want to use -->
    <script src="https://www.gstatic.com/firebasejs/7.14.1/firebase-auth.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.14.1/firebase-firestore.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.14.2/firebase-database.js"></script>

</body>
<script>
    const firebaseConfig = {
        apiKey: "AIzaSyBCA9AeUIOdmRCZYVW_qcBAtZSz7kkqLJU",
        authDomain: "recsys-24560.firebaseapp.com",
        databaseURL: "https://recsys-24560.firebaseio.com",
        projectId: "recsys-24560",
        storageBucket: "recsys-24560.appspot.com",
        messagingSenderId: "259570855306",
        appId: "1:259570855306:web:fe0d7f0aca8bef6aa96c73"
    };
    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);

    const firestore = firebase.firestore()
    const ref = firestore.collection('Movie')
    const ref_users = firestore.collection('Users')
    const realtimeDB = firebase.database();

    firebase.auth().onAuthStateChanged(function (user) {
        if (user) {
            user.providerData.forEach(function (profile) {
                console.log("Sign-in provider: " + profile.providerId);
                console.log("  Provider-specific UID: " + profile.uid);
                console.log("  Name: " + profile.displayName);
                console.log("  Email: " + profile.email);
                console.log("  Photo URL: " + profile.photoURL);
                console.log(profile)
                document.getElementById('fotoProfile').setAttribute('src', profile.photoURL)
                document.getElementById('emailProfile').innerHTML = profile.email
                document.getElementById('nameProfile').innerHTML = profile.displayName

                ref_users.doc(profile.displayName.trim()).set({
                    Vector: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
                }).then(function () {
                    console.log("Document successfully written!");
                }).catch(function (error) {
                    console.error("Error writing document: ", error);
                });
            });
        } else {
            // No user is signed in.
            alert('No User Sign-in')
            firebase.auth().signOut().then(function () {
                // Sign-out successful.
                alert('Logout')
            }).catch(function (error) {
                // An error happened.
                alert('Logout Error : ' + error)
            });
        }
    });

    function getRecommendation() {
        var userKey = (document.getElementById("nameProfile").innerHTML).trim();

        var user_vector = []
        var array = []
        ref_users.doc(userKey.toString()).get().then((data) => {
            user_vector = data.data().Vector
        })
        ref.get()
            .then((querySnapshot) => {
                var data = ref.orderBy('Release Date', 'desc').limit(150)
                data.get().then((snapShots) => {
                    snapShots.forEach((data) => {
                        console.log(data.id)
                        Vector = getValVectorUser(data.data().Genre)
                        dot_Product = dotProduct(Vector, user_vector)
                        console.log(data.id)
                        firestore.collection('Reccommendation').doc(data.id).set({
                            Genre: data.data().Genre,
                            Title: data.id,
                            Overview: data.data().Overview,
                            ReleaseDate: data.data()['Release Date'],
                            Score: sumVector(dot_Product)
                        }).then(function () {
                            console.log("Collection Reccommendation successfully written!");
                        }).catch(function (error) {
                            console.error("Error writing document: ", error);
                        });
                    })
                })

            })
    }



    function getValVectorUser(genre) {
        console.log(genre)
        var vectorUser = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        for (i = 0; i < genre.length; i++) {
            if (genre[i] == 'Comedy') {
                vectorUser[0] = 1
            } else if (genre[i] == 'Fantasy') {
                vectorUser[1] = 1
            } else if (genre[i] == 'Family') {
                vectorUser[2] = 1
            } else if (genre[i] == 'Romance') {
                vectorUser[3] = 1
            } else if (genre[i] == 'Thriller') {
                vectorUser[4] = 1
            } else if (genre[i] == 'Drama') {
                vectorUser[5] = 1
            } else if (genre[i] == 'Crime') {
                vectorUser[6] = 1
            } else if (genre[i] == 'Action') {
                vectorUser[7] = 1
            } else if (genre[i] == 'Horror') {
                vectorUser[8] = 1
            } else if (genre[i] == 'Adventure') {
                vectorUser[9] = 1
            } else if (genre[i] == 'History') {
                vectorUser[10] = 1
            } else if (genre[i] == 'Science Fiction') {
                vectorUser[11] = 1
            } else if (genre[i] == 'Mystery') {
                vectorUser[12] = 1
            } else if (genre[i] == 'Western') {
                vectorUser[13] = 1
            } else if (genre[i] == 'Animation') {
                vectorUser[14] = 1
            } else if (genre[i] == 'War') {
                vectorUser[15] = 1
            } else if (genre[i] == 'Foreign') {
                vectorUser[16] = 1
            } else if (genre[i] == 'Music') {
                vectorUser[17] = 1
            } else if (genre[i] == 'Documentary') {
                vectorUser[18] = 1
            }
        }
        return vectorUser
    }

    function buildElement(doc) {
        var tr = document.createElement('tr');
        var title = document.createElement('td');
        var genre = document.createElement('td');
        var releaseDate = document.createElement('td');
        var rating = document.createElement('td');
        var btn = document.createElement('button')
        var div = document.createElement('div')
        var input = document.createElement('input')
        var input_id = document.createElement('input')

        input.setAttribute('value', 0)
        input.setAttribute('type', 'hidden')
        input.setAttribute('name', doc.id)

        input_id.setAttribute('value', doc.id)
        input_id.setAttribute('type', 'hidden')
        input_id.setAttribute('name', 'id_' + doc.id)
        div.setAttribute('data-target', doc.id)
        $(div).addClass('row rate')


        $(btn).addClass('btn-sm btn-primary')

        var star = document.createElement('i')
        $(star).addClass('fa fa-star-o text-info')
        var star1 = document.createElement('i')
        $(star1).addClass('fa fa-star-o text-info')
        var star2 = document.createElement('i')
        $(star2).addClass('fa fa-star-o text-info')
        var star3 = document.createElement('i')
        $(star3).addClass('fa fa-star-o text-info')
        var star4 = document.createElement('i')
        $(star4).addClass('fa fa-star-o text-info')

        star.addEventListener('click', function () {
            $($(this).parent().parent().find("input")[0]).val($(this).parent().find(".fa-star").length)
            $(this).add($(this).prevAll("i")).removeClass("fa-star-o").addClass("fa-star");

            $(this).nextAll("i").removeClass("fa-star").addClass("fa-star-o");

            $($(this).parent().parent().find("input")[0]).val($(this).parent().find(".fa-star").length)
            console.log($(this).parent().parent())
            console.log($(this).closest('.rate').data('target') + ': ' + $('input[name="' + $(this).closest(
                '.rate').data('target') + '"]').val());
            console.log('click')
        })

        star1.addEventListener('click', function () {
            $($(this).parent().parent().find("input")[0]).val($(this).parent().find(".fa-star").length)
            $(this).add($(this).prevAll("i")).removeClass("fa-star-o").addClass("fa-star");

            $(this).nextAll("i").removeClass("fa-star").addClass("fa-star-o");

            $($(this).parent().parent().find("input")[0]).val($(this).parent().find(".fa-star").length)
            console.log($(this).parent().parent())
            console.log($(this).closest('.rate').data('target') + ': ' + $('input[name="' + $(this).closest(
                '.rate').data('target') + '"]').val());
            console.log('click')
        })

        star2.addEventListener('click', function () {
            $($(this).parent().parent().find("input")[0]).val($(this).parent().find(".fa-star").length)
            $(this).add($(this).prevAll("i")).removeClass("fa-star-o").addClass("fa-star");

            $(this).nextAll("i").removeClass("fa-star").addClass("fa-star-o");

            $($(this).parent().parent().find("input")[0]).val($(this).parent().find(".fa-star").length)
            console.log($(this).parent().parent())
            console.log($(this).closest('.rate').data('target') + ': ' + $('input[name="' + $(this).closest(
                '.rate').data('target') + '"]').val());
            console.log('click')
        })

        star3.addEventListener('click', function () {
            $($(this).parent().parent().find("input")[0]).val($(this).parent().find(".fa-star").length)
            $(this).add($(this).prevAll("i")).removeClass("fa-star-o").addClass("fa-star");

            $(this).nextAll("i").removeClass("fa-star").addClass("fa-star-o");

            $($(this).parent().parent().find("input")[0]).val($(this).parent().find(".fa-star").length)
            console.log($(this).parent().parent())
            console.log($(this).closest('.rate').data('target') + ': ' + $('input[name="' + $(this).closest(
                '.rate').data('target') + '"]').val());
            console.log('click')
        })

        star4.addEventListener('click', function () {
            $($(this).parent().parent().find("input")[0]).val($(this).parent().find(".fa-star").length)
            $(this).add($(this).prevAll("i")).removeClass("fa-star-o").addClass("fa-star");

            $(this).nextAll("i").removeClass("fa-star").addClass("fa-star-o");

            $($(this).parent().parent().find("input")[0]).val($(this).parent().find(".fa-star").length)
            console.log($(this).closest('.rate').data('target') + ': ' + $('input[name="' + $(this).closest(
                '.rate').data('target') + '"]').val());
            console.log('click')
        })

        btn.addEventListener('click', (e) => {
            var key = $(e.target.parentNode.parentNode.parentNode).data('id')
            var rating = $('input[name="' + key + '"]').val()
            var userKey = (document.getElementById("nameProfile").innerHTML).trim();
            var vectorProfile = []

            console.log(key)
            console.log(vectorProfile)
            ref.doc(key.toString()).get()
                .then((snapshot) => {
                    //console.log(snapshot.data())
                    var vector = getValVectorUser(snapshot.data().Genre)

                    //console.log(vector)
                    var multiplyVector = multiply(vector, rating)

                    //console.log(multiplyVector)

                    ref_users.doc(userKey).get()
                        .then((data) => {
                            vectorProfile = data.data().Vector
                            updateVector(multiplyVector, vectorProfile)
                            ref_users.doc(userKey).set({
                                Vector: multiplyVector
                            }).then(() => {
                                console.log('Update Vector Users :' + multiplyVector)
                                getRecommendation()

                            }).catch((err) => {
                                console.log('failed Update Vector Users' + err)
                            })

                        })

                })
            setTimeout(function wait() {
                // After waiting for five seconds, submit the form.
                getRecommendedMovie()
            }, 5000);
            e.preventDefault();
        })

        div.appendChild(star)
        div.appendChild(star1)
        div.appendChild(star2)
        div.appendChild(star3)
        div.appendChild(star4)
        div.appendChild(btn)
        rating.appendChild(div)

        //console.log(doc)
        title.textContent = doc.id;
        genre.textContent = doc.data().Genre.toString();
        releaseDate.textContent = doc.data()['Release Date'];
        btn.textContent = 'Like';
        rating.appendChild(input);
        rating.appendChild(input_id);

        tr.setAttribute('data-id', doc.id)
        tr.appendChild(title);
        tr.appendChild(genre);
        tr.appendChild(releaseDate);
        tr.appendChild(rating);
        listMovie.appendChild(tr);
    }

    function getDataMovie() {
        ref.doc().get()
            .then((snapShot) => {
                var data = ref.orderBy('Release Date', 'desc').limit(100)
                data.get().then((data) => {
                    data.forEach((dat) => {
                        buildElement(dat)

                        firestore.collection('Reccommendation').doc(dat.id).set({
                            Score: 0
                        }).then(function () {
                            console.log("Collection Reccommendation successfully written!");
                        }).catch(function (error) {
                            console.error("Error writing document: ", error);
                        });


                    }) 
                })
            })
                $('#tabelMovie').DataTable({}) 
    }

    function getCollectionRecsys() {
        //firestore.collection('Reccommendation').doc().get()
    }


    function multiply(arr, val) {
        //console.log(arr)
        //console.log(val)
        for (i = 0; i < arr.length; i++) {
            arr[i] = arr[i] * val
        }
        return arr
    }

    function dotProduct(arr1, arr2) {
        //console.log(arr1)
        //console.log(arr2)
        var arr = []
        for (i = 0; i < arr1.length; i++) {
            arr[i] = arr1[i] * arr2[i]
        }
        return arr
    }

    function sumVector(arr) {
        //console.log(arr)
        var tmp = 0
        for (i = 0; i < arr.length; i++) {
            tmp += arr[i]
        }
        return tmp
    }

    function updateVector(arr1, arr2) {
        for (i = 0; i < arr1.length; i++) {
            arr1[i] += arr2[i]
        }
        return arr1
    }

    function getRecommendedMovie() {
        i = 1
        firestore.collection('Reccommendation').doc().get().then((snapshot) => {
            var data = firestore.collection('Reccommendation').orderBy('Score', 'desc').limit(5)
            data.get().then((query) => {
                query.forEach((dat) => {
                    console.log("Recommended ID :" + dat.id)
                    assignReccommendation(dat, i)
                    i++
                })
                console.log('Data Recommend accesed')
            })
        })
    }

    function assignReccommendation(data, i) {
        title = 'title' + i.toString()
        genre = 'genre' + i.toString()
        releaseDate = 'releaseDate' + i.toString()
        score = 'score' + i.toString()

        document.getElementById(title).innerHTML = data.data().Title
        document.getElementById(genre).innerHTML = data.data().Genre
        document.getElementById(releaseDate).innerHTML = data.data().ReleaseDate
        document.getElementById(score).innerHTML = data.data().Score
    }

    function buildElementRecommended(doc) {
        var tr = document.createElement('tr');
        var title = document.createElement('td');
        var genre = document.createElement('td');
        var releaseDate = document.createElement('td');
        var rating = document.createElement('td');

        title.textContent = doc.data().Title;
        genre.textContent = doc.data().Genre.toString();
        releaseDate.textContent = doc.data().ReleaseDate;
        rating.textContent = doc.data().Score

        tr.setAttribute('data-id', doc.id)
        tr.appendChild(title);
        tr.appendChild(genre);
        tr.appendChild(releaseDate);
        tr.appendChild(rating);
        listRecommend.appendChild(tr);


    }
    
    $(document).ready(() => {
        getDataMovie()
        
        $($(this).parent().parent().find("input")[0]).val($(this).parent().find(".fa-star").length)
        $(function () {
            $(".rate i").css('cursor', 'pointer');
            $(".rate i").click(function () {
                $(this).add($(this).prevAll("i")).removeClass("fa-star-o").addClass("fa-star");
                $(this).nextAll("i").removeClass("fa-star").addClass("fa-star-o");
                $($(this).parent().parent().find("input")[0]).val($(this).parent().find(
                    ".fa-star").length)
                console.log($(this).closest('.rate').data('target') + ': ' + $('input[name="' +
                    $(this).closest('.rate').data('target') + '"]').val());
            });
        });

    })
</script>

</html>